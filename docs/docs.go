// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "YuuinIH",
            "email": "zsf821797423@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/report": {
            "get": {
                "description": "Get reports under this account.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Get reports under this account.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pagesize",
                        "name": "pagesize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Roguelike_Report_With_ID"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Upload a single report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Upload a single report.",
                "parameters": [
                    {
                        "description": "Report",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Roguelike_Report"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ReportID"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/report/{id}": {
            "get": {
                "description": "Get report corresponding to ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Get report corresponding to ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Roguelike_Report_With_ID"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete report corresponding to ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Delete report corresponding to ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ReportID"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/reports": {
            "post": {
                "description": "Upload multiple reports.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Upload multiple reports.",
                "parameters": [
                    {
                        "description": "Reports",
                        "name": "report",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Roguelike_Report"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ReportIDs"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login with UUID,it return a token.",
                "consumes": [
                    "multipart/form-data",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login with UUID.",
                "parameters": [
                    {
                        "description": "uuid",
                        "name": "uuid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.NewToken"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/uuid": {
            "get": {
                "description": "Generate a new UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get a new uuid.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Login"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Brief": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "endAt": {
                    "type": "integer"
                },
                "ending": {
                    "type": "string"
                },
                "squad": {
                    "type": "string"
                }
            }
        },
        "models.Initial": {
            "type": "object",
            "properties": {
                "recruitGroup": {
                    "type": "string"
                },
                "recruits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "support": {
                    "type": "string"
                }
            }
        },
        "models.JSONResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Login": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "models.NewToken": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            }
        },
        "models.Node": {
            "type": "object",
            "properties": {
                "capsules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "collections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recruits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "select": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shop": {
                    "$ref": "#/definitions/models.Shop"
                },
                "stage": {
                    "type": "string"
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "integer"
                },
                "upgrades": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Recruits": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "upgraded": {
                    "type": "boolean"
                }
            }
        },
        "models.ReportID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "6213912d7f21c24ec55377ac"
                }
            }
        },
        "models.ReportIDs": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "6213912d7f21c24ec55377ac",
                        "6213912d7f21c24ec55377aa"
                    ]
                }
            }
        },
        "models.Roguelike_Report": {
            "type": "object",
            "properties": {
                "brief": {
                    "$ref": "#/definitions/models.Brief"
                },
                "collections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "initial": {
                    "$ref": "#/definitions/models.Initial"
                },
                "mode": {
                    "type": "string"
                },
                "recruits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Recruits"
                    }
                },
                "theme": {
                    "type": "integer"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Zone"
                    }
                }
            }
        },
        "models.Roguelike_Report_With_ID": {
            "type": "object",
            "properties": {
                "brief": {
                    "$ref": "#/definitions/models.Brief"
                },
                "collections": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "initial": {
                    "$ref": "#/definitions/models.Initial"
                },
                "mode": {
                    "type": "string"
                },
                "recruits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Recruits"
                    }
                },
                "theme": {
                    "type": "integer"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Zone"
                    }
                }
            }
        },
        "models.Shop": {
            "type": "object",
            "properties": {
                "buys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Shop_Buy"
                    }
                },
                "inverst": {
                    "type": "integer"
                }
            }
        },
        "models.Shop_Buy": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "string"
                },
                "cost": {
                    "type": "integer"
                }
            }
        },
        "models.Zone": {
            "type": "object",
            "properties": {
                "enterZone": {
                    "type": "string"
                },
                "nodeList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Node"
                    }
                },
                "variations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "IS-LOG Api",
	Description: "The api of the IS-LOG.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
